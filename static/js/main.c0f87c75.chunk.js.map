{"version":3,"sources":["components/AllCovid/AllCovid.module.css","components/Countries/Country.module.css","components/Header/Header.module.css","components/Header/Input.module.css","components/Context/Context.js","components/AllCovid/AllCovid.js","components/Countries/Country.js","components/Countries/Countries.js","components/Header/Header.js","components/Header/Input.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","DataContext","React","createContext","data","isCountrySelected","isCountrySelectedHandler","country","countryHandler","sortSelected","sortSelectedHandler","ContextProvider","props","useState","setCountry","setIsCountrySelected","setSortSelected","Provider","value","e","children","AllCovid","datas","useContext","filter","className","classes","Confirmed","cases","new","total","Active","active","Recovered","recovered","Deceased","deaths","Country","onClick","btnHandler","Btn","map","response","index","newCase","confirmed","critical","casepermillion","deathspermillion","Countries","array","prop","cntx","temp","res","parseInt","continent","arr","localStorage","getItem","sort","a","b","target","innerText","Header","Cntx","Date","day","Input","inputRef","useRef","RandomData","isshow","setIsshow","setValue","setArr","setItem","type","placeholder","ref","onKeyUp","current","clear","input","toUpperCase","length","indexOf","onChange","event","App","setData","loading","setLoading","useEffect","fetch","then","json","catch","err","alert","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0f87c75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AllCovid\":\"AllCovid_AllCovid__3aYR4\",\"Confirmed\":\"AllCovid_Confirmed__3A84V\",\"Active\":\"AllCovid_Active__1I5KO\",\"Recovered\":\"AllCovid_Recovered__1BTjs\",\"Deceased\":\"AllCovid_Deceased__16Ty8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Country_Btn__3ipoh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2A0Iv\",\"Date\":\"Header_Date__aFuKu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3qrUn\",\"dropdown-content\":\"Input_dropdown-content__1fcOq\"};","import React from \"react\";\r\nimport { useState} from \"react/cjs/react.development\";\r\n\r\nconst  DataContext = React.createContext({\r\n        data:[],\r\n        isCountrySelected: false,\r\n        isCountrySelectedHandler: ()=>{},\r\n        country:\"\",\r\n        countryHandler : ()=>{},\r\n        sortSelected : \"\",\r\n        sortSelectedHandler: ()=>{}\r\n    });\r\n\r\n\r\nexport function ContextProvider(props){\r\n    const [country, setCountry] = useState(\"\");\r\n    const [isCountrySelected, setIsCountrySelected] = useState(false);\r\n    const [sortSelected, setSortSelected] = useState(\"newCase\");\r\n   \r\n    \r\n   function countryHandler(e){\r\n       setCountry(e);\r\n   }\r\n   function isCountrySelectedHandler(e){\r\n       setIsCountrySelected(e);\r\n   }\r\n\r\n   function sortSelectedHandler(e){\r\n      setSortSelected(e)\r\n   }\r\n    return(\r\n        <DataContext.Provider value={{\"data\" : props.data,\r\n        \"isCountrySelected\" : isCountrySelected,\r\n        \"isCountrySelectedHandler\" : isCountrySelectedHandler,\r\n          \"country\":country,\r\n          \"countryHandler\" : countryHandler,\r\n          \"sortSelected\" : sortSelected,\r\n          \"sortSelectedHandler\": sortSelectedHandler\r\n\r\n        }}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n\r\n    )\r\n    \r\n}\r\nexport default DataContext;","import { useContext } from \"react\";\r\nimport DataContext from \"../Context/Context\";\r\nimport classes from \"./AllCovid.module.css\"\r\nfunction AllCovid(props){\r\n    const Cntx = useContext(DataContext);\r\n    // console.log(Cntx)\r\n    const datas = Cntx.data.filter((e)=> e.country===\"All\");\r\n    // console.log(Cntx.data[0].day);\r\n   \r\n            \r\n           \r\n\r\n    return(\r\n           \r\n        \r\n        <div className={classes.AllCovid}>\r\n            <div className={classes.Confirmed}>\r\n            <div>\r\n                Confirmed\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.new}\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.total}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Active}>\r\n            <div >\r\n                Active\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.active}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Recovered}>\r\n            <div>\r\n                Recovered\r\n            </div>\r\n            <div>\r\n            {datas[0].cases.recovered}\r\n            </div>\r\n            </div>\r\n            <div className={classes.Deceased}>\r\n            <div>\r\n                Deceased\r\n            </div>\r\n            <div>\r\n            {datas[0].deaths.new}\r\n            </div>\r\n            <div>\r\n            {datas[0].deaths.total}\r\n            </div>\r\n            </div>\r\n            \r\n        </div>\r\n       \r\n    )\r\n}\r\n\r\nexport default AllCovid;","import classes from \"./Country.module.css\";\r\n\r\nfunction Country(props){\r\n    \r\n    return(\r\n<div className=\"table-responsive-md\">\r\n<table className=\"table table-striped\">\r\n<thead>\r\n  <tr >\r\n    <th>Country</th>\r\n    <th> <button onClick={props.btnHandler} className={classes.Btn}> Confirmed </button></th>\r\n    <th>Active</th>\r\n    <th>Recovered</th>\r\n    <th>Critical </th>\r\n    <th>Deceased</th>\r\n    <th> <button onClick={props.btnHandler} className={classes.Btn}> Cases per million </button></th>\r\n    <th> <button onClick={props.btnHandler} className={classes.Btn}> Deaths per million </button></th>\r\n  </tr>\r\n  </thead>\r\n  <tbody>\r\n  {props.data.map((response,index)=>{\r\n\r\n        return (\r\n\r\n    <tr key={index} >\r\n    <td > {response.country}</td>\r\n    <td> <h6>+{response.newCase} </h6> {response.confirmed}</td>\r\n    <td>{response.active}</td>\r\n    <td> {response.recovered}</td>\r\n    <td> {response.critical}</td>\r\n    <td>  {response.deaths}</td>\r\n    <td> {response.casepermillion}</td>\r\n    <td>{response.deathspermillion} </td>\r\n    \r\n   \r\n  </tr>\r\n  \r\n\r\n    )\r\n    })}\r\n    </tbody>\r\n</table>\r\n </div>\r\n)\r\n}\r\n\r\nexport default Country;","import { useContext } from \"react\";\r\nimport DataContext from \"../Context/Context\";\r\nimport Country from \"./Country\";\r\n\r\n\r\n\r\nfunction Countries(){\r\n    const cntx = useContext(DataContext);\r\n    var array =  []\r\n    // console.log(cntx.data);    \r\n    function GetSortOrder (prop) {    \r\n       return function(a, b) {    \r\n           if (a[prop] < b[prop]) {    \r\n               return 1;    \r\n           } else if (a[prop] > b[prop]) {    \r\n               return -1;    \r\n           }    \r\n           return 0;    \r\n       }    \r\n    }    \r\n    \r\n    const temp = cntx.data.map((res)=>{\r\n        var newCase=0;\r\n        var casepermillion=0;\r\n        var deathspermillion=0;\r\n        var active=0;\r\n        var recovered=0;\r\n        var deaths=0;\r\n        var critical=0\r\n        if(res.cases.new !==null){\r\n            newCase = parseInt(res.cases.new )\r\n        }\r\n    \r\n        if(res.cases[\"1M_pop\"]!==null){\r\n             casepermillion=parseInt(res.cases[\"1M_pop\"]);\r\n        }\r\n        if(res.deaths[\"1M_pop\"]!==null){\r\n            deathspermillion=parseInt(res.deaths[\"1M_pop\"])\r\n        }\r\n        if(res.cases.active!==null){\r\n            active = parseInt(res.cases.active)\r\n        }\r\n        if(res.cases.recovered!==null){\r\n           recovered = parseInt(res.cases.recovered)\r\n        }\r\n        if(res.deaths.total!==null){\r\n            deaths = parseInt(res.deaths.total)\r\n        }\r\n        if(res.cases.critical!==null){\r\n            critical=parseInt(res.cases.critical);\r\n        }\r\n    return(\r\n        { \r\n            \"newCase\": newCase,\r\n            \"casepermillion\" : casepermillion,\r\n            \"deathspermillion\" : deathspermillion,\r\n            \"country\" : res.country,\r\n            \"continent\": res.continent,\r\n            \"confirmed\" : parseInt(res.cases.total),\r\n            \"active\" :active,\r\n            \"recovered\":recovered,\r\n            \"deaths\" : deaths,\r\n            \"critical\" : critical\r\n        }\r\n    )\r\n    \r\n    });\r\n    var arr=[];\r\n    if(localStorage.getItem(\"country\") !== \"undefined\" && localStorage.getItem(\"country\")!==null){\r\n    // console.log(\"yeeee\");\r\n    arr=temp.filter((e)=> e.country === localStorage.getItem(\"country\"));\r\n    }   \r\n    else if(cntx.isCountrySelected){\r\n     \r\n    arr = temp.filter((e)=>  e.country === cntx.country )\r\n    }\r\n    else{\r\n    \r\n    arr = temp.filter((e)=>  e.country !== e.continent )\r\n    \r\n    }\r\n    \r\n    arr.sort(GetSortOrder(cntx.sortSelected));\r\n    array=arr;\r\n    function btnHandler(e){\r\n        \r\n    if(e.target.innerText===\"Cases per million\"){\r\n        cntx.sortSelectedHandler(\"casepermillion\")\r\n    }\r\n    else if(e.target.innerText===\"Deaths per million\"){\r\n        cntx.sortSelectedHandler(\"deathspermillion\")\r\n    \r\n    }\r\n    else {\r\n        cntx.sortSelectedHandler(\"newCase\")\r\n    \r\n    }\r\n    \r\n    }\r\n   \r\n    return (\r\n\r\n        <Country btnHandler={btnHandler} data={array}/>\r\n    )\r\n    \r\n}\r\n\r\nexport default Countries;\r\n\r\n\r\n\r\n","\r\nimport { useContext } from \"react\";\r\nimport DataContext from \"../Context/Context\";\r\nimport classes from \"./Header.module.css\";\r\n\r\nfunction Header(){\r\n    const Cntx = useContext(DataContext);\r\n   \r\n    return(\r\n        <>\r\n       \r\n        <h1 className={classes.Header}> COVID19 <span>WORLD</span></h1>\r\n        <h3 className={classes.Header}> Search your country or continent </h3>\r\n        <div className={classes.Date}>{Cntx.data[0].day}</div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Header;","import { useContext, useRef } from \"react\";\r\nimport { useState } from \"react/cjs/react.development\";\r\nimport DataContext from \"../Context/Context\";\r\nimport classes from \"./Input.module.css\";\r\n\r\n\r\nfunction Input(){\r\n   const inputRef = useRef();\r\n   \r\n   const Cntx = useContext(DataContext)\r\n\r\n   const RandomData= Cntx.data.map((e)=> e.country);\r\n   const [isshow, setIsshow]= useState(false);\r\n   const [value, setValue] = useState(\"\");\r\n   const [arr, setArr] = useState([]);\r\n\r\n\r\n   \r\n   function filterFunction(){\r\n    setValue(inputRef.current.value);\r\n    Cntx.isCountrySelectedHandler(false);\r\n    localStorage.clear();\r\n     var input = inputRef.current.value.toUpperCase();\r\n     if(input.length >=2){\r\n        \r\n     var array = RandomData.filter((e)=> e.toUpperCase().indexOf(input)>-1);\r\n    array.length=7;\r\n     setArr(array);\r\n     setIsshow(true)\r\n   }\r\n   else{\r\n       \r\n       setArr([]);\r\n   }\r\n   }\r\n   function btnHandler(e){\r\n       setValue(e.target.innerText);\r\n      localStorage.setItem(\"country\", e.target.innerText);\r\n    //   console.log(e.target.innerText);\r\n      Cntx.countryHandler(e.target.innerText);\r\n      Cntx.isCountrySelectedHandler(true);\r\n      setIsshow(false);\r\n   }\r\n\r\n   function changeHandler(e){\r\n    localStorage.clear()\r\n    setValue(e.target.value);\r\n    \r\n    \r\n   }\r\n\r\n    return(\r\n        <>\r\n        <div className={classes.Input}>\r\n        <input type=\"text\" placeholder=\"Search..\" ref={inputRef} onKeyUp={filterFunction} onChange={changeHandler} value={value} />\r\n        { isshow ? <div className={classes[\"dropdown-content\"]}>{arr.map((event,index)=>\r\n        (\r\n           <button onClick={btnHandler} key={index} > {event}  </button>)\r\n        )} </div> : null }\r\n        </div>\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Input;\r\n\r\n","import './App.css';\nimport AllCovid from './components/AllCovid/AllCovid';\nimport { ContextProvider } from './components/Context/Context';\nimport Countries from './components/Countries/Countries';\nimport Header from './components/Header/Header';\nimport Input from './components/Header/Input';\n\nimport {useState, useEffect} from \"react\"\n\n\n\nfunction App() {\n  const [data, setData]= useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(()=>{\n    fetch(\"https://covid-193.p.rapidapi.com/statistics\", {\n        \"method\": \"GET\",\n        \"headers\": {\n            \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\n            \"x-rapidapi-key\": \"613baafc16msh487fdb600a437f5p1ae449jsnf8acf1720170\"\n        }\n    })\n    .then(response => {\n        return response.json();\n    }).then((json)=>{\n          // console.log(json);\n          setData(json.response)\n        setLoading(true)})\n          .catch(err => {\n       alert(\"Not able to fetch Data\");\n    });\n  },[]) \n \n  \n     return <div className=\"App\">\n     { loading &&\n     <ContextProvider data={data}> \n       <Header />\n      <Input />\n      <AllCovid />\n     <Countries/>\n     </ContextProvider> }\n     </div> \n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}